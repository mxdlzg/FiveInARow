package ui;

import ui.widget.BackgroundPanel;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;

/**
 * Created by 廷江 on 2017/6/4.
 */
public class Chessboard {
    private JPanel mainPanel;
    private JPanel chessboardPanel;
    private JLabel background;
    private BackgroundPanel backgroundPanel1;
    private JPanel controlPanel;
    private JButton btnExit;
    private JButton button2;
    private JButton button3;
    private JButton button4;
    private JButton button5;
    private ChessboardControl chessboardControl;

    /**
     * 初始化界面中的各个控件，初始化控制器
     */
    public Chessboard() {
        initBackground();
        labelAction();
        initPanel();
        initButton();
        chessboardControl = new ChessboardControl(background);
    }

    /**
     * 初始化background，为其添加用户点击事件
     */
    private void labelAction() {
        background.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                chessboardControl.onActionDown(e.getX(), e.getY());
            }
        });
    }

    /**
     * 初始化panel
     */
    private void initPanel() {

    }

    /**
     * 初始button，当前仅做实验使用
     */
    private void initButton() {
        btnExit.setBackground(Color.LIGHT_GRAY);
        btnExit.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                btnExit.setBackground(Color.WHITE);
            }
        });
        btnExit.addMouseListener(new MouseAdapter() {
            @Override
            public void mousePressed(MouseEvent e) {
                btnExit.setBackground(Color.WHITE);
            }
        });
    }

    /**
     * 初始化background，加载棋盘图片
     */
    private void initBackground() {
        ImageIcon imageIcon = new ImageIcon("./src/res/image/chessboardImage.png");
        imageIcon.setImage(imageIcon.getImage().getScaledInstance(800, 800, Image.SCALE_DEFAULT));
        background.setIcon(imageIcon);
        background.setText("");
        background.setBackground(Color.RED);
    }

    /**
     * 界面主方法
     * @param args args
     */
    public static void main(String[] args) {
        JFrame frame = new JFrame("Chessboard");
        frame.setResizable(false);
        Toolkit toolkit = Toolkit.getDefaultToolkit();
        Dimension dimension = toolkit.getScreenSize();
        int width = (int) (dimension.getWidth() / 2);
        int height = (int) (dimension.getHeight() / 2);
        frame.setContentPane(new Chessboard().mainPanel);
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.pack();
        frame.setVisible(true);
        frame.setLocation(width - frame.getWidth() / 2, height - frame.getHeight() / 2);
    }

    /**
     * @return 主panel
     */
    public JPanel getMainPanel() {
        return mainPanel;
    }

    /**
     * @param mainPanel 主panel
     */
    public void setMainPanel(JPanel mainPanel) {
        this.mainPanel = mainPanel;
    }

    /**
     * @return 棋盘panel
     */
    public JPanel getChessboardPanel() {
        return chessboardPanel;
    }

    /**
     * @param chessboardPanel 棋盘panel
     */
    public void setChessboardPanel(JPanel chessboardPanel) {
        this.chessboardPanel = chessboardPanel;
    }

    /**
     * @return 背景label
     */
    public JLabel getBackground() {
        return background;
    }

    /**
     * @param background 背景label
     */
    public void setBackground(JLabel background) {
        this.background = background;
    }

    /**
     * @return 控制panel
     */
    public JPanel getControlPanel() {
        return controlPanel;
    }

    /**
     * @param controlPanel 控制panel
     */
    public void setControlPanel(JPanel controlPanel) {
        this.controlPanel = controlPanel;
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        mainPanel = new JPanel();
        mainPanel.setLayout(new GridBagLayout());
        mainPanel.setBackground(new Color(-526345));
        mainPanel.setMaximumSize(new Dimension(1200, 1000));
        mainPanel.setMinimumSize(new Dimension(1200, 1000));
        chessboardPanel = new JPanel();
        chessboardPanel.setLayout(new GridBagLayout());
        chessboardPanel.setBackground(new Color(-1513240));
        chessboardPanel.setMaximumSize(new Dimension(800, 1000));
        chessboardPanel.setMinimumSize(new Dimension(800, 1000));
        GridBagConstraints gbc;
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.weightx = 2.0;
        gbc.weighty = 1.0;
        gbc.fill = GridBagConstraints.BOTH;
        gbc.ipady = 100;
        mainPanel.add(chessboardPanel, gbc);
        background = new JLabel();
        background.setBackground(new Color(-1568507));
        background.setText("Label");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.anchor = GridBagConstraints.WEST;
        chessboardPanel.add(background, gbc);
        controlPanel = new JPanel();
        controlPanel.setLayout(new FlowLayout(FlowLayout.CENTER, 5, 5));
        controlPanel.setBackground(new Color(-3552823));
        controlPanel.setMaximumSize(new Dimension(400, 1000));
        controlPanel.setMinimumSize(new Dimension(400, 1000));
        controlPanel.setVisible(true);
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 1;
        gbc.weightx = 1.0;
        gbc.fill = GridBagConstraints.BOTH;
        mainPanel.add(controlPanel, gbc);
        controlPanel.setBorder(BorderFactory.createTitledBorder(BorderFactory.createRaisedBevelBorder(), null));
        btnExit = new JButton();
        btnExit.setAutoscrolls(false);
        btnExit.setBorderPainted(false);
        btnExit.setContentAreaFilled(true);
        btnExit.setDefaultCapable(false);
        btnExit.setDoubleBuffered(true);
        btnExit.setFocusPainted(false);
        btnExit.setFocusable(true);
        btnExit.setOpaque(true);
        btnExit.setRequestFocusEnabled(false);
        btnExit.setRolloverEnabled(false);
        btnExit.setSelected(false);
        btnExit.setText("Button");
        btnExit.putClientProperty("html.disable", Boolean.FALSE);
        btnExit.putClientProperty("hideActionText", Boolean.FALSE);
        controlPanel.add(btnExit);
        button2 = new JButton();
        button2.setText("Button");
        controlPanel.add(button2);
        button3 = new JButton();
        button3.setText("Button");
        controlPanel.add(button3);
        button4 = new JButton();
        button4.setText("Button");
        controlPanel.add(button4);
        button5 = new JButton();
        button5.setText("Button");
        controlPanel.add(button5);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return mainPanel;
    }
}
